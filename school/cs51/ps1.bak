( define ( mystery x )
( cond
( ( null? x ) x )
( ( null? ( car x ) ) ( mystery ( cdr x ) ) )
( ( pair? ( car x ) ) ( append ( mystery ( car x ) ) ( mystery ( cdr x ) ) ) )
( else ( cons ( car x ) ( mystery ( cdr x ) ) ) ) ) )

(define (restrict enzyme dna)
  (restrict-position-helper enzyme dna 0))

(define (restrict-position-helper enzyme dna position)
  (cond
    ((null? dna) '())
    ((restrict-mystery-helper? enzyme dna)
      (cons position
            (restrict-position-helper enzyme (cdr dna) (+ 1 position))))
    (else (restrict-position-helper enzyme (cdr dna) (+ 1 position)))))

(define (restrict-mystery-helper? enzyme dna)
  (cond
    ((and (null? dna) (not (null? enzyme))) #f)
    ((null? enzyme) #t)
    ((equal? (car enzyme) (car dna))
       (restrict-mystery-helper? (cdr enzyme) (cdr dna)))
    (else #f)))