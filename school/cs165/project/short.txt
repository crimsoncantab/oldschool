Neena Kamath
Victor Bendeck
Loren McGinnis

After hearing from professors and teaching fellows alike about the horrors of securing a room for lecture, section, or a meeting, we have decided to implement a solution to the recurring problem of room reservation.  It seems that at the beginning of a semester, classes go through the inevitable game of musical rooms--and we are not talking about Paine Hall here--usually for the first week or two before everything reaches equilibrium.  To relieve this headache, we propose implementing a web-interface, database-driven solution that will reduce the process to a series of clicks.  Instead of figuring out which person is the right one, out of the hundreds that compose the Harvard administration, to talk to, users need only to access the website and fill out a simple form, then have their room assignment arrive in their inbox in minutes.  Users will have the flexibility to choose time, size, and rough location of the room, as well as other factors, like the presence of projectors or chalkboards.  To resolve conflicts, the project will use prioritization and authorization for various user types--a professor might get a reservation immediately, whereas a TF may need to wait for an admin's permission.  Users will be able to specify their request as recurring, for a semester of lectures, or one-time, for a meeting or special section.

Some interesting problems that will come up in the implementation: How to represent the locations of rooms in a database, particularly if we wanted to model the distance from a professor's office to the room.  Another issue involves modeling time, such as keeping track of days of the week, holidays, or semester date ranges for recurring reservations.  Authentication - we do not want the public to be able to freely reserve rooms, this would cause chaos.  Additionally, some of the users need to have restricted access, such as needing their reservation to be authorized by an admin user.  Scalability will be the most important goal of the project-if it works well for a subset of buildings, like SEAS, we would want to easily extend it to the entire campus.
