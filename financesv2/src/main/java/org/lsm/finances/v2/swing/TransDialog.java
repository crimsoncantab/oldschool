/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AccountDialog.java
 *
 * Created on Jul 19, 2009, 6:35:07 PM
 */
package org.lsm.finances.v2.swing;

import java.awt.Component;
import java.awt.Frame;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.Map;
import org.lsm.finances.v2.object.Account;
import org.lsm.finances.v2.object.Category;
import org.lsm.finances.v2.object.FinanceProfile;
import org.lsm.finances.v2.object.Transaction;
import org.lsm.finances.v2.swing.model.AccountListModel;
import org.lsm.finances.v2.swing.model.CategoryListModel;
import org.lsm.finances.v2.swing.model.Renderers;

/**
 *
 * @author Loren
 */
public class TransDialog extends AddDialog<Transaction> {

    private boolean transfer;

    public TransDialog(Frame parent, FinanceProfile profile) {
        super(parent, profile);
        initComponents();
        transNormalRadio.setSelected(true);
        transNormalRadioActionPerformed(null);
    }

    @Override
    protected Transaction getNew() {
        boolean inputInvalid = false;
        Map<Component, Boolean> isInvalidMap = new LinkedHashMap<Component, Boolean>();

        Account account = (Account) comboAccount.getSelectedItem();
        if (account == null) {
            isInvalidMap.put(labelAccount, true);
            inputInvalid = true;
        } else {
            isInvalidMap.put(labelAccount, false);
        }

        String desc = textDesc.getText();
        if (desc == null || desc.equals("")) {
            isInvalidMap.put(labelDesc, true);
            inputInvalid = true;
        } else {
            isInvalidMap.put(labelDesc, false);
        }

        double amount = 0;
        try {
            amount = Double.parseDouble(textAmount.getText());
            if (transfer) {
                amount = -1 * Math.abs(amount);
            }
            isInvalidMap.put(labelAmount, false);
        } catch (NumberFormatException numberFormatException) {
            isInvalidMap.put(labelAmount, true);
            inputInvalid = true;
        }

        Date date = chooserDate.getDate();
        if (date == null) {
            date = new Date();
        }

        Category cat = (Category) comboCategory.getSelectedItem();
        if (cat == null) {
            cat = Category.NO_CAT;
        }

        Account to = null;
        if (transfer) {
            to = (Account) comboAccountTrans.getSelectedItem();
            if (to == null) {
                isInvalidMap.put(labelTransfer, true);
                inputInvalid = true;
            }
            isInvalidMap.put(labelTransfer, false);
        }

        highlightErrors(isInvalidMap);
        if (inputInvalid) {
            throw new IllegalArgumentException();
        }

        if (transfer) {
            desc = "TFER: " + desc;
            profile.addTransaction(new Transaction(profile.getNewTransId(), desc, date, to, -1 * amount, cat));
        }

        return new Transaction(profile.getNewTransId(), desc, date, account, amount, cat);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonPanel = new javax.swing.JPanel();
        buttonAdd = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        inputPanel = new javax.swing.JPanel();
        labelDesc = new javax.swing.JLabel();
        textDesc = new javax.swing.JTextField();
        labelAmount = new javax.swing.JLabel();
        labelDate = new javax.swing.JLabel();
        chooserDate = new com.toedter.calendar.JDateChooser();
        labelAccount = new javax.swing.JLabel();
        comboAccount = new javax.swing.JComboBox();
        labelCategory = new javax.swing.JLabel();
        comboCategory = new javax.swing.JComboBox();
        transTransferRadio = new javax.swing.JRadioButton();
        transNormalRadio = new javax.swing.JRadioButton();
        comboAccountTrans = new javax.swing.JComboBox();
        labelTransfer = new javax.swing.JLabel();
        textAmount = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Transaction");
        setResizable(false);

        buttonAdd.setText("Add");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });
        buttonPanel.add(buttonAdd);

        buttonCancel.setText("Close");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });
        buttonPanel.add(buttonCancel);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.PAGE_END);

        inputPanel.setLayout(new java.awt.GridBagLayout());

        labelDesc.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        inputPanel.add(labelDesc, gridBagConstraints);

        textDesc.setMinimumSize(new java.awt.Dimension(80, 20));
        textDesc.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        inputPanel.add(textDesc, gridBagConstraints);

        labelAmount.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        inputPanel.add(labelAmount, gridBagConstraints);

        labelDate.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        inputPanel.add(labelDate, gridBagConstraints);

        chooserDate.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        inputPanel.add(chooserDate, gridBagConstraints);

        labelAccount.setText("Account");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        inputPanel.add(labelAccount, gridBagConstraints);

        comboAccount.setModel(new AccountListModel(profile));
        comboAccount.setPreferredSize(new java.awt.Dimension(120, 20));
        comboAccount.setRenderer(new Renderers.AccountListRenderer());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        inputPanel.add(comboAccount, gridBagConstraints);

        labelCategory.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        inputPanel.add(labelCategory, gridBagConstraints);

        comboCategory.setModel(new CategoryListModel(profile));
        comboCategory.setPreferredSize(new java.awt.Dimension(120, 20));
        comboCategory.setRenderer(new Renderers.CatListRenderer());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        inputPanel.add(comboCategory, gridBagConstraints);

        buttonGroup1.add(transTransferRadio);
        transTransferRadio.setText("Transfer");
        transTransferRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transTransferRadiosetTransferMode(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        inputPanel.add(transTransferRadio, gridBagConstraints);

        buttonGroup1.add(transNormalRadio);
        transNormalRadio.setSelected(true);
        transNormalRadio.setText("Normal");
        transNormalRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transNormalRadioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        inputPanel.add(transNormalRadio, gridBagConstraints);

        comboAccountTrans.setModel(new AccountListModel(profile));
        comboAccountTrans.setPreferredSize(new java.awt.Dimension(120, 20));
        comboAccountTrans.setRenderer(new Renderers.AccountListRenderer());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        inputPanel.add(comboAccountTrans, gridBagConstraints);

        labelTransfer.setText("Transfer To:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        inputPanel.add(labelTransfer, gridBagConstraints);

        textAmount.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        inputPanel.add(textAmount, gridBagConstraints);

        getContentPane().add(inputPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void transTransferRadiosetTransferMode(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transTransferRadiosetTransferMode
        transfer = true;
        labelTransfer.setVisible(true);
        comboAccountTrans.setVisible(true);
        pack();
}//GEN-LAST:event_transTransferRadiosetTransferMode

    private void transNormalRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transNormalRadioActionPerformed
        transfer = false;
        labelTransfer.setVisible(false);
        comboAccountTrans.setVisible(false);
        pack();
}//GEN-LAST:event_transNormalRadioActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        try {
            profile.addTransaction(getNew());
            textAmount.setText("");
            textDesc.setText("");
            chooserDate.setDate(null);
            comboAccount.setSelectedItem(null);
            ((AccountListModel) comboAccount.getModel()).notifyChange();
            comboAccountTrans.setSelectedItem(null);
            ((AccountListModel) comboAccountTrans.getModel()).notifyChange();
            comboCategory.setSelectedItem(null);
            ((CategoryListModel) comboCategory.getModel()).notifyChange();
        } catch (IllegalArgumentException e) {
        }
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        close();
    }//GEN-LAST:event_buttonCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonCancel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel buttonPanel;
    private com.toedter.calendar.JDateChooser chooserDate;
    private javax.swing.JComboBox comboAccount;
    private javax.swing.JComboBox comboAccountTrans;
    private javax.swing.JComboBox comboCategory;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JLabel labelAccount;
    private javax.swing.JLabel labelAmount;
    private javax.swing.JLabel labelCategory;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelDesc;
    private javax.swing.JLabel labelTransfer;
    private javax.swing.JTextField textAmount;
    private javax.swing.JTextField textDesc;
    private javax.swing.JRadioButton transNormalRadio;
    private javax.swing.JRadioButton transTransferRadio;
    // End of variables declaration//GEN-END:variables
}
